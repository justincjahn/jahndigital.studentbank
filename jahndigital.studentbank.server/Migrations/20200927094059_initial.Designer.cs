// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jahndigital.studentbank.server;

namespace jahndigital.studentbank.server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20200927094059_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("InstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.HasIndex("Name", "InstanceId")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Instance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Privilege", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(16);

                    b.HasKey("Id");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasMaxLength(128);

                    b.Property<bool>("IsBuiltIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.RolePrivilege", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PrivilegeId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoleId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("RolePrivileges");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Share", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateLastActive")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawBalance")
                        .HasColumnName("Balance")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ShareTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShareTypeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.ShareType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<long>("RawDividendRate")
                        .HasColumnName("DividendRate")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ShareTypes");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Stock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AvailableShares")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("InstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(32);

                    b.Property<long>("RawCurrentValue")
                        .HasColumnName("CurrentValue")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<long>("TotalShares")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.StockHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawValue")
                        .HasColumnName("Value")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StockId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockHistory");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<long>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(84);

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("AccountNumber", "GroupId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.StudentStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("StockId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentStocks");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.StudentStockHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawAmount")
                        .HasColumnName("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentStockId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TransactionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentStockId");

                    b.HasIndex("TransactionId");

                    b.ToTable("StudentStockHistory");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawAmount")
                        .HasColumnName("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RawNewBalance")
                        .HasColumnName("NewBalance")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TargetShareId")
                        .HasColumnType("INTEGER");

                    b.Property<char>("TransactionType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetShareId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(64);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(84);

                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Group", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.Instance", "Instance")
                        .WithMany("Groups")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.RolePrivilege", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.Privilege", "Privilege")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.server.Entities.Role", "Role")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Share", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.ShareType", "ShareType")
                        .WithMany("Shares")
                        .HasForeignKey("ShareTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.server.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Stock", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.Instance", "Instance")
                        .WithMany("Stocks")
                        .HasForeignKey("InstanceId");
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.StockHistory", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.Stock", "Stock")
                        .WithMany("History")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Student", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("jahndigital.studentbank.server.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CreatedByIpAddress")
                                .HasColumnType("TEXT")
                                .HasMaxLength(39);

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RevokedByIpAddress")
                                .HasColumnType("TEXT")
                                .HasMaxLength(39);

                            b1.Property<long>("StudentId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Token")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("StudentId");

                            b1.ToTable("Students_RefreshTokens");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.StudentStock", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.server.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.StudentStockHistory", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.StudentStock", "StudentStock")
                        .WithMany("History")
                        .HasForeignKey("StudentStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.server.Entities.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.Transaction", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.Share", "TargetShare")
                        .WithMany()
                        .HasForeignKey("TargetShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("jahndigital.studentbank.server.Entities.User", b =>
                {
                    b.HasOne("jahndigital.studentbank.server.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("jahndigital.studentbank.server.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CreatedByIpAddress")
                                .HasColumnType("TEXT")
                                .HasMaxLength(39);

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RevokedByIpAddress")
                                .HasColumnType("TEXT")
                                .HasMaxLength(39);

                            b1.Property<string>("Token")
                                .HasColumnType("TEXT");

                            b1.Property<long>("UserId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("UserId");

                            b1.ToTable("Users_RefreshTokens");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

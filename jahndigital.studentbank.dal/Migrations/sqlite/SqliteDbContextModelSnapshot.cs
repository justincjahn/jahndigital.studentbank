// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jahndigital.studentbank.dal.Contexts;

namespace jahndigital.studentbank.dal.Migrations.sqlite
{
    [DbContext(typeof(SqliteDbContext))]
    partial class SqliteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("TEXT");

                    b.Property<long>("InstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InstanceId");

                    b.HasIndex("Name", "InstanceId")
                        .IsUnique();

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Instance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.ToTable("Instances");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Privilege", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Privileges");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsLimitedQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RawCost")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Cost");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.ProductInstance", b =>
                {
                    b.Property<long>("InstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstanceId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInstances");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsBuiltIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.RolePrivilege", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("PrivilegeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoleId", "PrivilegeId");

                    b.HasIndex("PrivilegeId");

                    b.ToTable("RolePrivileges");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Share", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateLastActive")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawBalance")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Balance");

                    b.Property<long>("RawDividendLastAmount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DividendLastAmount");

                    b.Property<long>("RawTotalDividends")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TotalDividends");

                    b.Property<long>("ShareTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ShareTypeId");

                    b.HasIndex("StudentId");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.ShareType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<long>("RawDividendRate")
                        .HasColumnType("INTEGER")
                        .HasColumnName("DividendRate");

                    b.HasKey("Id");

                    b.ToTable("ShareTypes");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.ShareTypeInstance", b =>
                {
                    b.Property<long>("InstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ShareTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstanceId", "ShareTypeId");

                    b.HasIndex("ShareTypeId");

                    b.ToTable("ShareTypeInstances");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Stock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("AvailableShares")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<long>("RawCurrentValue")
                        .HasColumnType("INTEGER")
                        .HasColumnName("CurrentValue");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<long>("TotalShares")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StockHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateChanged")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawValue")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Value");

                    b.Property<long>("StockId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("StockHistory");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StockInstance", b =>
                {
                    b.Property<long>("InstanceId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StockId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstanceId", "StockId");

                    b.HasIndex("StockId");

                    b.ToTable("StockInstances");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<long>("GroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(84)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("AccountNumber", "GroupId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentPurchase", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawTotalCost")
                        .HasColumnType("INTEGER")
                        .HasColumnName("TotalCost");

                    b.Property<int>("Status")
                        .HasColumnType("nvarchar(32)");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentPurchases");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentPurchaseItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RawPurchasePrice")
                        .HasColumnType("INTEGER")
                        .HasColumnName("PurchasePrice");

                    b.Property<long>("StudentPurchaseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StudentPurchaseId");

                    b.ToTable("StudentPurchaseItems");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentStock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateLastActive")
                        .HasColumnType("TEXT");

                    b.Property<long>("SharesOwned")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StockId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentStocks");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentStockHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawAmount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Amount");

                    b.Property<long>("StudentStockId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TransactionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StudentStockId");

                    b.HasIndex("TransactionId");

                    b.ToTable("StudentStockHistory");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("TEXT");

                    b.Property<long>("RawAmount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Amount");

                    b.Property<long>("RawNewBalance")
                        .HasColumnType("INTEGER")
                        .HasColumnName("NewBalance");

                    b.Property<long>("TargetShareId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TargetShareId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(84)
                        .HasColumnType("TEXT");

                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Group", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Instance", "Instance")
                        .WithMany("Groups")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Product", b =>
                {
                    b.OwnsMany("jahndigital.studentbank.dal.Entities.ProductImage", "Images", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<long>("ProductId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("ProductId");

                            b1.ToTable("ProductImages");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Images");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.ProductInstance", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Instance", "Instance")
                        .WithMany("ProductInstances")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.dal.Entities.Product", "Product")
                        .WithMany("ProductInstances")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.RolePrivilege", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Privilege", "Privilege")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("PrivilegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.dal.Entities.Role", "Role")
                        .WithMany("RolePrivileges")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Privilege");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Share", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.ShareType", "ShareType")
                        .WithMany("Shares")
                        .HasForeignKey("ShareTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.dal.Entities.Student", "Student")
                        .WithMany("Shares")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ShareType");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.ShareTypeInstance", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Instance", "Instance")
                        .WithMany("ShareTypeInstances")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.dal.Entities.ShareType", "ShareType")
                        .WithMany("ShareTypeInstances")
                        .HasForeignKey("ShareTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");

                    b.Navigation("ShareType");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StockHistory", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Stock", "Stock")
                        .WithMany("History")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StockInstance", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Instance", "Instance")
                        .WithMany("StockInstances")
                        .HasForeignKey("InstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.dal.Entities.Stock", "Stock")
                        .WithMany("StockInstances")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instance");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Student", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("jahndigital.studentbank.dal.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CreatedByIpAddress")
                                .IsRequired()
                                .HasMaxLength(39)
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ReplacedByToken")
                                .HasMaxLength(7168)
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RevokedByIpAddress")
                                .HasMaxLength(39)
                                .HasColumnType("TEXT");

                            b1.Property<long>("StudentId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasMaxLength(7168)
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("StudentId");

                            b1.ToTable("Students_RefreshTokens");

                            b1.WithOwner()
                                .HasForeignKey("StudentId");
                        });

                    b.Navigation("Group");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentPurchase", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Student", "Student")
                        .WithMany("Purchases")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentPurchaseItem", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.dal.Entities.StudentPurchase", "StudentPurchase")
                        .WithMany("Items")
                        .HasForeignKey("StudentPurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("StudentPurchase");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentStock", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Stock", "Stock")
                        .WithMany("StudentStock")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.dal.Entities.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stock");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentStockHistory", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.StudentStock", "StudentStock")
                        .WithMany("History")
                        .HasForeignKey("StudentStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jahndigital.studentbank.dal.Entities.Transaction", "Transaction")
                        .WithMany()
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StudentStock");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Transaction", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Share", "TargetShare")
                        .WithMany("Transactions")
                        .HasForeignKey("TargetShareId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetShare");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.User", b =>
                {
                    b.HasOne("jahndigital.studentbank.dal.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("jahndigital.studentbank.dal.Entities.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CreatedByIpAddress")
                                .IsRequired()
                                .HasMaxLength(39)
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("Expires")
                                .HasColumnType("TEXT");

                            b1.Property<string>("ReplacedByToken")
                                .HasMaxLength(7168)
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("TEXT");

                            b1.Property<string>("RevokedByIpAddress")
                                .HasMaxLength(39)
                                .HasColumnType("TEXT");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasMaxLength(7168)
                                .HasColumnType("TEXT");

                            b1.Property<long>("UserId")
                                .HasColumnType("INTEGER");

                            b1.HasKey("Id");

                            b1.HasIndex("UserId");

                            b1.ToTable("Users_RefreshTokens");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("RefreshTokens");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Instance", b =>
                {
                    b.Navigation("Groups");

                    b.Navigation("ProductInstances");

                    b.Navigation("ShareTypeInstances");

                    b.Navigation("StockInstances");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Privilege", b =>
                {
                    b.Navigation("RolePrivileges");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Product", b =>
                {
                    b.Navigation("ProductInstances");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Role", b =>
                {
                    b.Navigation("RolePrivileges");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Share", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.ShareType", b =>
                {
                    b.Navigation("Shares");

                    b.Navigation("ShareTypeInstances");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Stock", b =>
                {
                    b.Navigation("History");

                    b.Navigation("StockInstances");

                    b.Navigation("StudentStock");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.Student", b =>
                {
                    b.Navigation("Purchases");

                    b.Navigation("Shares");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentPurchase", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("jahndigital.studentbank.dal.Entities.StudentStock", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
